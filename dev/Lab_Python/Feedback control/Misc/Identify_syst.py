import math

class microring_experimental(object):
    """ Class for a single microring resonator that has a PN junction linked to a source meter unit (SMU_in) and that has a
    metal heater linked to a DC source (DC_out). """

    def __init__(self, SMU_in, DC_out):

        self.SMU_in = SMU_in
        self.DC_out = DC_out

        # Connect instruments
        self.SMU_in.connect()
        self.DC_out.connect()

        # Measure the resistance of the Heater
        self.measure_resistance()

    def apply_heat_heater(self, P):
        """Apply power to the microring resonator (MRR) using the DC source connected to the heater."""
        self.apply_voltage_heater(math.sqrt(self.heater_resistance * P))

    def apply_voltage_heater(self, V):
        """Apply bias to heater."""
        self.DC_out.source_voltage(V)

    def measure_resistance_heater(self):
        """Measure the resistance of the heater circuit, to apply power directly."""
        input("Connect the SMU unit to the heater to measure it's resistance, then press any key to continue")
        self.heater_resistance = self.DC_out.measure_resistance()
        print("Resistance of the heater is " + self.heater_resistance + " ohms.")

    def apply_bias(self, bias):
        """Apply bias to the PN junction."""
        self.SMU_in.source_voltage(bias)

    def measure_current(self):
        """Measure the photocurrent generated by the microring resonator using the source meter unit (SMU)."""
        self.SMU_in.measure_current()

    def update(self, P):
        """Apply the command (heater power) and measure the output (photocurrent)."""
        self.apply_heat_heater(P)
        return self.measure_current()



if __name__ == "__main__":
    from Instruments.Keithley_2612B import Keithley_2612B
    from Instruments.Agilent_E3631A import Agilent_E3631A

    # DC sources objects
    SMU_in = Keithley_2612B(20, 'a')
    DC_out = Agilent_E3631A(21, 6)

    MR = microring_experimental(SMU_in, DC_out)